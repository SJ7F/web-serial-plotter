---
alwaysApply: true
---
# Project Structure Guide

Key entry points and architecture for the Web Serial Plotter:

- App shell: [src/App.tsx](mdc:src/App.tsx) → layout, controls, overlays, and integration.
- Plot rendering: [src/components/PlotCanvas.tsx](mdc:src/components/PlotCanvas.tsx) → DPR-aware canvas with grid and series lines. ResizeObserver sets backing size; drawing is triggered on snapshot/theme changes.
- Data store (ring buffer): [src/store/dataStore.tsx](mdc:src/store/dataStore.tsx) → `RingStore` with `append`, `getWindow({ startFromNewest, length })`, series meta and total count.
- Web Serial: [src/hooks/useSerial.ts](mdc:src/hooks/useSerial.ts) → newline-delimited reader via TextDecoderStream; emits lines.
- UI primitives: [src/components/ui/*](mdc:src/components/ui/) → shared `Button`, `Input`, `Select`, `Checkbox`, `ColorInput`.
- Stats: [src/components/StatsPanel.tsx](mdc:src/components/StatsPanel.tsx) → windowed stats + per-card PNG using html-to-image.
- Legend overlay: [src/components/Legend.tsx](mdc:src/components/Legend.tsx) → left overlay, modal editing.
- Theme toggle: [src/components/ThemeToggle.tsx](mdc:src/components/ThemeToggle.tsx).

Layout:
- Root uses `h-dvh` and a three-row grid inside the plot area: `minmax(0,1fr)` plot, 6px drag handle, and a variable stats height.
- The legend/tools are absolute overlays within the plot container.

Do not worry about backwards compatibility for now.
